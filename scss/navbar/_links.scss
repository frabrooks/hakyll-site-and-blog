

// Hack for DRY here and in responsive/navbar/container -> mSmall
@import '../declarations/cv-animated-config';


// nav-link: Home/Contact/Blog etc. buttons
// This class exists separate to nav-block as not all
// nab-blocks need be hidden or shown
.nav-link {
    height: 0;
    opacity: 0;
    visibility: hidden;
    
    &.show {
	height: $nav-block-height;
	opacity: 1;	
	visibility: visible;
    }
    a {
	// Animate background of <a> elem as a different
	// transition (easeOutNav) is applied to nav-links
	// (height, opacity, visibilty) for slide in slide out anim
	@include easeOutSlow;

	width: 100%;
	height: 100%;
	
	padding: $nav-link-padding-top
		 $nav-link-padding-right
		 $nav-link-padding-bottom
		 $nav-link-padding-left;
	
    }
    a:hover {
	background-color: $color-4;
    }
}


#cv-link {

    @include easeOutWidth;

    @include cv-link-animated-config;
    
    transition-delay: 0.6s;
    
    flex: 0 0 auto;

    // This may seem overkill on each single navlink/block item (coming from
    // Android development, nested flexible layouts raises alarm bells for me)
    // but it seems to be the most sensible way to center things in CSS these days.
    // Apparently flexbox is pretty performant so not a big worry.
    //display: flex;
    // Main axis
    //justify-content: center;
    // Cross axis
    //align-items: center;
    // The combination of the above are responsible for the centering
    
    overflow: hidden;
    
    
    a {
		
	@include easeOutSlow;

	width: auto;
	height: auto;
	
	//width: $cv-button-link-width;
	//height: $cv-button-link-height;

	padding: $cv-button-padding-top
		 $cv-button-padding-right
		 $cv-button-padding-bottom
		 $cv-button-padding-left;
	
	border-radius: 8px;
	color: $color-3;
	
    }
    a:hover{
	background-color: $color-3;
	color: black;
    }
    &.hide {
	width: 0;
	padding: 0;
	visibility: hidden;
	transition-delay: 0s;
	a {
	    border: none;
	}
    }
}


//?
#nav-link1 {
    &.title-hidden {
	margin-left: auto;
    }
}


